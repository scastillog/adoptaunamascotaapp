package com.enriquecastillo.adopta_mascotas.ui.register;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.support.annotation.NonNull;import android.support.design.widget.TextInputLayout;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentTransaction;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.Toolbar;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.ProgressBar;import android.widget.Toast;import com.enriquecastillo.adopta_mascotas.R;import com.enriquecastillo.adopta_mascotas.ui.login.LoginActivity;import com.enriquecastillo.adopta_mascotas.ui.login.loginemail.EmailLoginActivity;import com.enriquecastillo.adopta_mascotas.ui.profile.ProfileEditActivity;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.auth.UserProfileChangeRequest;import butterknife.BindView;import butterknife.ButterKnife;import butterknife.OnClick;public class RegisterActivity extends AppCompatActivity  {    private FirebaseAuth firebaseAuth;    private FirebaseAuth.AuthStateListener authStateListener;    private static final String TAG = "RegisterActivity";    @BindView(R.id.toolbar) Toolbar myToolbar;    @BindView(R.id.et_reg_email) TextInputLayout edtEmail;    @BindView(R.id.et_reg_name) TextInputLayout edtName;    @BindView(R.id.et_reg_password) TextInputLayout edtPassword;    @BindView(R.id.et_reg_repeatpassword) TextInputLayout edtRepeatPassword;    @BindView(R.id.progress_bar_register) ProgressBar progressBarRegister;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_register);        ButterKnife.bind(this);        setUpToolbar();        initializeFirebase();        putEmailPassword();        progressBarRegister.setVisibility(View.INVISIBLE);    }    private void createAccount(String email, String password) {        firebaseAuth.createUserWithEmailAndPassword(email, password).addOnCompleteListener(RegisterActivity.this, new OnCompleteListener<AuthResult>() {            @Override            public void onComplete(@NonNull Task<AuthResult> task) {                if (task.isSuccessful()) {                    Toast.makeText(RegisterActivity.this, "Cuenta creada con exito!", Toast.LENGTH_SHORT).show();                    goToEditProfileActivity();                } else {                    Toast.makeText(RegisterActivity.this, "Cuenta creada sin exito!", Toast.LENGTH_SHORT).show();                }            }        });    }    private void putEmailPassword() {        SharedPreferences prefs = this.getSharedPreferences("Preferences", Context.MODE_PRIVATE);        String email = prefs.getString("email", " ");        String password = prefs.getString("password", " ");        edtEmail.getEditText().setText(email);        edtPassword.getEditText().setText(password);    }    private void setUpToolbar() {        setSupportActionBar(myToolbar);        getSupportActionBar().setTitle("Registra tu Correo");        getSupportActionBar().setDisplayHomeAsUpEnabled(true);    }    private void initializeFirebase() {        firebaseAuth = FirebaseAuth.getInstance();        authStateListener = new FirebaseAuth.AuthStateListener() {            @Override            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {                FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();                if (firebaseUser != null) {                    Log.w(TAG, "onAuthStateChanged - signed_in" + firebaseUser.getEmail());                } else {                    Log.w(TAG, "onAuthStateChanged - signed_out");                }            }        };    }    @OnClick(R.id.btn_register)    void onClickRegister(){        if (TextUtils.isEmpty(edtEmail.getEditText().getText())) {            edtEmail.setError("Llena bien este campo");            return;        }        if (!EmailLoginActivity.isValidEmail(edtEmail.getEditText().getText().toString())) {            edtEmail.setError("Digita un correo valido");            return;        }        if (TextUtils.isEmpty(edtName.getEditText().getText())) {            edtEmail.setError("Llena bien este campo");            return;        }        if (TextUtils.isEmpty(edtPassword.getEditText().getText())) {            edtPassword.setError("Llena bien este campo");            return;        }        if (EmailLoginActivity.MIN_LENGTH_PASSWORD > edtPassword.getEditText().getText().toString().length() ) {            edtPassword.setError("La contraseña debe tener mas de 6 caracteres");            return;        }        if(!edtPassword.getEditText().equals(edtRepeatPassword.getEditText())){            edtRepeatPassword.setError("No coincide con la contraseña");            return;        }        String email = edtEmail.getEditText().getText().toString().trim();        String password = edtPassword.getEditText().getText().toString().trim();        progressBarRegister.setVisibility(View.VISIBLE);        createAccount(email, password);    }    private void goToEditProfileActivity() {        Intent intent = new Intent(RegisterActivity.this, ProfileEditActivity.class);        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);        intent.putExtra("key", "create");        startActivity(intent);    }    @Override    protected void onStart() {        super.onStart();        firebaseAuth.addAuthStateListener(authStateListener);        progressBarRegister.setVisibility(View.INVISIBLE);    }    @Override    protected void onStop() {        super.onStop();        firebaseAuth.removeAuthStateListener(authStateListener);    }    @Override    protected void onPause() {        super.onPause();        progressBarRegister.setVisibility(View.INVISIBLE);    }}